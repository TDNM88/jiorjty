/** @type {import('next').NextConfig} */
const nextConfig = {
  eslint: {
    ignoreDuringBuilds: true,
  },
  typescript: {
    ignoreBuildErrors: true,
  },
  images: {
    unoptimized: true,
  },
  webpack: (config) => {
    // Important: return the modified config
    return config;
  },
  // Moved to root level as per Next.js 15.2.4
  serverExternalPackages: ['sharp', 'onnxruntime-node'],
  // Add this to handle module resolution
  transpilePackages: [],
  // Enable React strict mode
  reactStrictMode: true,
  // i18n configuration
  i18n: {
    locales: ['en', 'vi'],
    defaultLocale: 'en',
    localeDetection: true,
  },
  // Load custom locales
  publicRuntimeConfig: {
    locales: ['en', 'vi'],
    defaultLocale: 'en',
  },
  // Load custom locales from the locales directory
  i18n: {
    locales: ['en', 'vi'],
    defaultLocale: 'en',
    localeDetection: true,
    domains: [
      {
        domain: 'localhost',
        defaultLocale: 'en',
      },
    ],
  },
  // Load custom locales
  webpack: (config, { isServer }) => {
    if (!isServer) {
      config.resolve.fallback = {
        ...config.resolve.fallback,
        fs: false,
      };
    }
    return config;
  },
}

export default nextConfig;
